# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-09-28 15:41
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Click',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(db_index=True, verbose_name='Datetime')),
                ('color', models.CharField(db_index=True, max_length=50, verbose_name='Target')),
                ('is_valid', models.NullBooleanField(db_index=True, default=None, verbose_name='Is Valid?')),
            ],
            options={
                'verbose_name': 'Click',
                'verbose_name_plural': 'Click',
                'ordering': ['datetime'],
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('http_request_sha1', models.CharField(db_index=True, max_length=40, unique=True, verbose_name='SHA1')),
                ('is_valid', models.NullBooleanField(db_index=True, default=None, verbose_name='Is Valid?')),
                ('start_datetime', models.DateTimeField(verbose_name='Start datetime')),
                ('end_datetime', models.DateTimeField(db_index=True, verbose_name='End datetime')),
                ('colors', models.CharField(max_length=50, verbose_name='Color order')),
                ('device', models.CharField(max_length=50, verbose_name='Device')),
                ('location', models.CharField(max_length=50, verbose_name='Location')),
                ('uid', models.EmailField(db_index=True, max_length=254, verbose_name='User ID')),
                ('timeout', models.FloatField(help_text='Seconds per color', verbose_name='Timeout')),
                ('regularity', models.PositiveSmallIntegerField(help_text='Click every X seconds', verbose_name='Regularity')),
                ('time_between_clicks', models.TextField(blank=True, default=None, null=True, verbose_name='Time between clicks')),
                ('survey_age', models.PositiveSmallIntegerField(verbose_name='Age')),
                ('survey_condition', models.CharField(choices=[('rested', 'Well rested'), ('normal', 'Normal'), ('tired', 'Tired')], max_length=50, verbose_name='Condition')),
                ('survey_gender', models.CharField(choices=[('female', 'Female'), ('male', 'Male'), ('other', 'Other')], max_length=50, verbose_name='Gender')),
                ('survey_time', models.CharField(choices=[('after-sleep', 'After Sleep'), ('before-sleep', 'Before Sleep'), ('other', 'Other')], max_length=50, verbose_name='Time')),
                ('survey_temperature', models.DecimalField(decimal_places=1, help_text='Celsius', max_digits=3, verbose_name='Temperature')),
                ('survey_bp_systolic', models.PositiveSmallIntegerField(blank=True, default=None, null=True, verbose_name='Blood Pressure SYS')),
                ('survey_bp_diastolic', models.PositiveSmallIntegerField(blank=True, default=None, null=True, verbose_name='Blood Pressure DIA')),
                ('survey_heart_rate', models.PositiveSmallIntegerField(blank=True, default=None, help_text='bpm', null=True, verbose_name='Heart Rate')),
                ('survey_sleep', models.TimeField(verbose_name='Sleep Hours')),
                ('count_all', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Count')),
                ('count_blue', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Count - blue')),
                ('count_red', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Count - red')),
                ('count_white', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Count - white')),
                ('tempo_all', models.FloatField(blank=True, null=True, verbose_name='Tempo')),
                ('tempo_blue', models.FloatField(blank=True, null=True, verbose_name='Tempo - blue')),
                ('tempo_red', models.FloatField(blank=True, null=True, verbose_name='Tempo - red')),
                ('tempo_white', models.FloatField(blank=True, null=True, verbose_name='Tempo - white')),
                ('regularity_all', models.FloatField(blank=True, null=True, verbose_name='Regularity')),
                ('regularity_blue', models.FloatField(blank=True, null=True, verbose_name='Regularity - blue')),
                ('regularity_red', models.FloatField(blank=True, null=True, verbose_name='Regularity - red')),
                ('regularity_white', models.FloatField(blank=True, null=True, verbose_name='Regularity - white')),
                ('interval_all', models.FloatField(blank=True, null=True, verbose_name='Interval')),
                ('interval_blue', models.FloatField(blank=True, null=True, verbose_name='Interval - blue')),
                ('interval_red', models.FloatField(blank=True, null=True, verbose_name='Interval - red')),
                ('interval_white', models.FloatField(blank=True, null=True, verbose_name='Interval - white')),
            ],
            options={
                'verbose_name': 'Result',
                'verbose_name_plural': 'Results',
            },
        ),
        migrations.AddField(
            model_name='click',
            name='result',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_v3.Result', verbose_name='Result'),
        ),
    ]
