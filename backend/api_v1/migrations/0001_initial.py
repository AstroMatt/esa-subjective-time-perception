# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2016-12-31 15:02
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Click',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(verbose_name='Datetime')),
                ('background', models.CharField(choices=[('black', 'Black'), ('white', 'White'), ('blue', 'Blue'), ('red', 'Red')], max_length=15, verbose_name='Background')),
            ],
            options={
                'verbose_name': 'Click event',
                'verbose_name_plural': 'Click events',
                'ordering': ['datetime'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(verbose_name='Datetime')),
                ('action', models.CharField(choices=[('start', 'Start'), ('end', 'End')], max_length=15, verbose_name='Action')),
                ('message', models.CharField(max_length=30, verbose_name='Message')),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
                'ordering': ['datetime'],
            },
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=50, verbose_name='Location')),
                ('experiment_start', models.DateTimeField(null=True, verbose_name='Start date')),
                ('experiment_end', models.DateTimeField(null=True, verbose_name='End date')),
                ('timeout', models.PositiveIntegerField(help_text='Microseconds', verbose_name='Timeout')),
                ('first_name', models.CharField(max_length=50, null=True, verbose_name='First name')),
                ('last_name', models.CharField(max_length=50, null=True, verbose_name='Last name')),
                ('age', models.PositiveSmallIntegerField(verbose_name='Age')),
                ('rhythm', models.CharField(choices=[('perfect', 'Perfect'), ('above-average', 'Above average'), ('average', 'Average'), ('below-average', 'Below average'), ('poor', 'Poor')], max_length=50, verbose_name='Rhythm')),
                ('gender', models.CharField(choices=[('female', 'Female'), ('male', 'Male'), ('other', 'Other')], max_length=50, verbose_name='Gender')),
                ('condition', models.CharField(choices=[('well-rested', 'Well rested'), ('normal', 'Normal'), ('tired', 'Tired')], max_length=50, verbose_name='Condition')),
                ('polarization', models.CharField(choices=[('horizontal', 'Horizontal'), ('vertical', 'Vertical'), ('cross', 'Cross'), ('mixed', 'Mixed')], max_length=15, verbose_name='Polarization')),
                ('device', models.CharField(choices=[('computer-1', 'Computer 1'), ('computer-2', 'Computer 2')], max_length=50, verbose_name='Device')),
                ('order', models.CharField(max_length=70, null=True, verbose_name='Order')),
                ('white_start', models.DateTimeField(null=True, verbose_name='White color start')),
                ('white_end', models.DateTimeField(null=True, verbose_name='White color end')),
                ('blue_start', models.DateTimeField(null=True, verbose_name='Blue color start')),
                ('blue_end', models.DateTimeField(null=True, verbose_name='Blue color end')),
                ('red_start', models.DateTimeField(null=True, verbose_name='Red color start')),
                ('red_end', models.DateTimeField(null=True, verbose_name='Red color end')),
                ('is_valid', models.NullBooleanField(verbose_name='Is valid?')),
            ],
            options={
                'verbose_name': 'Experiment',
                'verbose_name_plural': 'Experiments',
                'ordering': ['last_name', 'first_name', 'age', '-experiment_start'],
            },
        ),
        migrations.CreateModel(
            name='Trial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('polarization', models.CharField(choices=[('horizontal', 'Horizontal'), ('vertical', 'Vertical'), ('cross', 'Cross'), ('mixed', 'Mixed')], max_length=15, verbose_name='Polarization')),
                ('device', models.CharField(choices=[('computer-1', 'Computer 1'), ('computer-2', 'Computer 2')], max_length=50, verbose_name='Device')),
                ('order', models.CharField(max_length=70, null=True, verbose_name='Order')),
                ('start', models.DateTimeField(null=True, verbose_name='Start date')),
                ('end', models.DateTimeField(null=True, verbose_name='End date')),
                ('white_start', models.DateTimeField(null=True, verbose_name='White color start')),
                ('white_end', models.DateTimeField(null=True, verbose_name='White color end')),
                ('blue_start', models.DateTimeField(null=True, verbose_name='Blue color start')),
                ('blue_end', models.DateTimeField(null=True, verbose_name='Blue color end')),
                ('red_start', models.DateTimeField(null=True, verbose_name='Red color start')),
                ('red_end', models.DateTimeField(null=True, verbose_name='Red color end')),
                ('is_valid', models.NullBooleanField(verbose_name='Is valid?')),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_v1.Experiment', verbose_name='Experiment')),
            ],
            options={
                'verbose_name': 'Trial',
                'verbose_name_plural': 'Trials',
                'ordering': ['-start'],
            },
        ),
        migrations.AddField(
            model_name='event',
            name='experiment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_v1.Experiment', verbose_name='Experiment'),
        ),
        migrations.AddField(
            model_name='click',
            name='experiment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_v1.Experiment', verbose_name='Experiment'),
        ),
    ]
